21. Merge Two Sorted Lists
Easy

7448

812

Add to List

Share
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.

 

Example 1:


Input: l1 = [1,2,4], l2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: l1 = [], l2 = []
Output: []
Example 3:

Input: l1 = [], l2 = [0]
Output: [0]
 

Constraints:

The number of nodes in both lists is in the range [0, 50].
-100 <= Node.val <= 100
Both l1 and l2 are sorted in non-decreasing order.












class Solution {
  public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
    if (l1 == null) {
        return l2;
    }else if (l2 == null) {
        return  l1;
    }

    ListNode mergedList = new ListNode(0); // final list
    ListNode tmp = mergedList;

    while (l1 != null || l2 != null) {

        if (l1 == null) {
            tmp.next = new ListNode(l2.val);
            l2 = l2.next; // move l2 ahead
        } else if (l2 == null) {
            tmp.next = new ListNode(l1.val);
            l1 = l1.next; // move l1 ahead
        } else {
            if (l1.val < l2.val) {
                tmp.next = new ListNode(l1.val);
                l1 = l1.next; // move l1 ahead
            } else {
                tmp.next = new ListNode(l2.val);
                l2 = l2.next; // move l2 ahead

            }
        }
        tmp = tmp.next;
    }

    return mergedList.next; // ignore the first i.e. 0 value

}
}

