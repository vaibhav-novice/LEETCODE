20. Valid Parentheses
Easy

8117

333

Add to List

Share
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.








class Solution 
{
    public boolean isValid(String s) 
    {
        int i ;
        char parentheses ;
        Stack<Character> st = new Stack<>() ;        
        for( i = 0 ; i < s.length() ; i++ )
        { 
            parentheses = s.charAt(i) ;
            if( parentheses == '(' || parentheses == '[' || parentheses == '{' )
            {
                st.push(parentheses) ;    
            }
            else if( st.empty() )
            {
                return false ;
            }
            else if( parentheses == ')' && st.pop() != '(' )
            {
                return false ;
            }
            else if( parentheses == ']' && st.pop() != '[' )
            {
                return false ;
            }
            else if( parentheses == '}' && st.pop() != '{' )
            {
                return false ;
            }
        }
        return st.empty() ;
    }
}
